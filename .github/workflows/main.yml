# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Install_python:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel

  CodeStyle:
    runs-on: self-hosted
    needs: Install_python
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: pip install flake8
      - name: Codestyle
        run: python -m flake8 ./ --ignore=F401,E402
        
  Tests:
    runs-on: self-hosted
    needs: CodeStyle
    steps:
      - uses: actions/checkout@v2
      - name: tests
        run: |
          pip install -e '.[test]'
          python -m coverage run -m pytest
          python -m coverage report

  Docker:
    runs-on: self-hosted
    needs: Tests
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
           sudo docker stop calculator
           sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:latest
           sudo docker run -d --rm --name calculator -p 80:5000 ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

  TelegramNotifications:
    runs-on: self-hosted
    needs: Docker
    steps:
      - name: Notification Failed
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO_DEBUG }}
          token: ${{ secrets.TELEGRAM_TOKEN_DEBUG }}
          message: ‚ùå fail ‚ùå
      - name: Notification Failed
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO_DEBUG }}
          token: ${{ secrets.TELEGRAM_TOKEN_DEBUG }}
          message: üôå success üôå
